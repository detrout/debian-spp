Author: Diane Trout <diane@ghic.org>
Description: Several deprecated hash headers were removed in g++ 6.
 This updates them to the newer names "unordered_"
 I also removed a few #include <strstream> but no changes were
 needed as the code had already been updated for sstream

--- a/src/pc.h
+++ b/src/pc.h
@@ -1,17 +1,6 @@
 #ifndef PC_H
 #define PC_H 1
 #include <functional>
-#include <ext/hash_map>
-
-namespace __gnu_cxx
-{
-        template<> struct hash< std::string >
-        {
-                size_t operator()( const std::string& x ) const
-                {
-                        return hash< const char* >()( x.c_str() );
-                }
-        };
-}
-
+#include <unordered_set>
+#include <unordered_map>
 #endif
--- a/src/bed2vector.cpp
+++ b/src/bed2vector.cpp
@@ -5,7 +5,6 @@
 #include <iostream>
 #include <fstream>
 #include <sstream>
-#include <strstream>
 #include <algorithm>
 #include <string>
 #include <functional>
@@ -31,7 +30,6 @@
 }
 
 using namespace std;
-using namespace __gnu_cxx; 
 
 
 class lessAbsoluteValue {
@@ -115,7 +113,7 @@
   vector< vector<int> > pos;
 
   // chromosome map
-  hash_map<string, int, hash<string>,equal_to<string> > cind_map;
+  unordered_map<string, int, hash<string>,equal_to<string> > cind_map;
   vector<string> cnames;
 
   typedef boost::tokenizer<boost::char_separator<char> >  tokType;
@@ -160,7 +158,7 @@
       }
 
       // determine the chromosome index
-      hash_map<string, int, hash<string>,equal_to<string> >::const_iterator li=cind_map.find(chr);
+      unordered_map<string, int, hash<string>,equal_to<string> >::const_iterator li=cind_map.find(chr);
       int cind=-1;
       if(li==cind_map.end()) {
 	// register new chromosome
@@ -251,7 +249,7 @@
   vector< vector<int> > poslen; // length
 
   // chromosome map
-  hash_map<string, int, hash<string>,equal_to<string> > cind_map;
+  unordered_map<string, int, hash<string>,equal_to<string> > cind_map;
   vector<string> cnames;
   
 
@@ -293,7 +291,7 @@
       int fpos=atoi(str_pos.c_str());
       
       // determine the chromosome index
-      hash_map<string, int, hash<string>,equal_to<string> >::const_iterator li=cind_map.find(chr);
+      unordered_map<string, int, hash<string>,equal_to<string> >::const_iterator li=cind_map.find(chr);
       int cind=-1;
       if(li==cind_map.end()) {
 	// register new chromosome
@@ -429,7 +427,7 @@
   vector< vector<string> > tagnames;
 
   // chromosome map
-  hash_map<string, int, hash<string>,equal_to<string> > cind_map;
+  unordered_map<string, int, hash<string>,equal_to<string> > cind_map;
   vector<string> cnames;
   
 
@@ -473,7 +471,7 @@
       int fpos=atoi(str_pos.c_str());
       
       // determine the chromosome index
-      hash_map<string, int, hash<string>,equal_to<string> >::const_iterator li=cind_map.find(chr);
+      unordered_map<string, int, hash<string>,equal_to<string> >::const_iterator li=cind_map.find(chr);
       int cind=-1;
       if(li==cind_map.end()) {
 	// register new chromosome
@@ -621,7 +619,7 @@
   vector< vector<int> > mm2; // position of the second mismatch
 
   // chromosome map
-  hash_map<string, int, hash<string>,equal_to<string> > cind_map;
+  unordered_map<string, int, hash<string>,equal_to<string> > cind_map;
   vector<string> cnames;
   
 
@@ -689,7 +687,7 @@
       }
       
       // determine the chromosome index
-      hash_map<string, int, hash<string>,equal_to<string> >::const_iterator li=cind_map.find(chr);
+      unordered_map<string, int, hash<string>,equal_to<string> >::const_iterator li=cind_map.find(chr);
       int cind=-1;
       if(li==cind_map.end()) {
 	// register new chromosome
@@ -814,7 +812,7 @@
   vector< vector<string> > tagnames;
 
   // chromosome map
-  hash_map<string, int, hash<string>,equal_to<string> > cind_map;
+  unordered_map<string, int, hash<string>,equal_to<string> > cind_map;
   vector<string> cnames;
   
 
@@ -865,7 +863,7 @@
       }
       
       // determine the chromosome index
-      hash_map<string, int, hash<string>,equal_to<string> >::const_iterator li=cind_map.find(chr);
+      unordered_map<string, int, hash<string>,equal_to<string> >::const_iterator li=cind_map.find(chr);
       int cind=-1;
       if(li==cind_map.end()) {
 	// register new chromosome
@@ -1001,7 +999,7 @@
   vector< vector<string> > tagnames;
 
   // chromosome map
-  hash_map<string, int, hash<string>,equal_to<string> > cind_map;
+  unordered_map<string, int, hash<string>,equal_to<string> > cind_map;
   vector<string> cnames;
   
 
@@ -1075,7 +1073,7 @@
       }
       
       // determine the chromosome index
-      hash_map<string, int, hash<string>,equal_to<string> >::const_iterator li=cind_map.find(chr);
+      unordered_map<string, int, hash<string>,equal_to<string> >::const_iterator li=cind_map.find(chr);
       int cind=-1;
       if(li==cind_map.end()) {
 	// register new chromosome
@@ -1210,7 +1208,7 @@
   vector< vector<string> > tagnames;
 
   // chromosome map
-  hash_map<string, int, hash<string>,equal_to<string> > cind_map;
+  unordered_map<string, int, hash<string>,equal_to<string> > cind_map;
   vector<string> cnames;
   
 
@@ -1363,7 +1361,7 @@
       }
       
       // determine the chromosome index
-      hash_map<string, int, hash<string>,equal_to<string> >::const_iterator li=cind_map.find(chr);
+      unordered_map<string, int, hash<string>,equal_to<string> >::const_iterator li=cind_map.find(chr);
       int cind=-1;
       if(li==cind_map.end()) {
 	// register new chromosome
@@ -1497,7 +1495,7 @@
   vector< vector<string> > tagnames;
 
   // chromosome map
-  hash_map<string, int, hash<string>,equal_to<string> > cind_map;
+  unordered_map<string, int, hash<string>,equal_to<string> > cind_map;
   vector<string> cnames;
   
 
@@ -1572,7 +1570,7 @@
 
       
       // determine the chromosome index
-      hash_map<string, int, hash<string>,equal_to<string> >::const_iterator li=cind_map.find(chr);
+      unordered_map<string, int, hash<string>,equal_to<string> >::const_iterator li=cind_map.find(chr);
       int cind=-1;
       if(li==cind_map.end()) {
 	// register new chromosome
@@ -1711,7 +1709,7 @@
   vector< vector<string> > tagnames;
 
   // chromosome map
-  hash_map<string, int, hash<string>,equal_to<string> > cind_map;
+  unordered_map<string, int, hash<string>,equal_to<string> > cind_map;
   vector<string> cnames;
   
 
@@ -1789,7 +1787,7 @@
       int nm=atoi(str_ndel.c_str())+atoi(str_nins.c_str())+atoi(str_nsub.c_str());
       
       // determine the chromosome index
-      hash_map<string, int, hash<string>,equal_to<string> >::const_iterator li=cind_map.find(chr);
+      unordered_map<string, int, hash<string>,equal_to<string> >::const_iterator li=cind_map.find(chr);
       int cind=-1;
       if(li==cind_map.end()) {
 	// register new chromosome
@@ -1938,7 +1936,7 @@
   vector< vector<string> > tagnames;
 
   // chromosome map
-  hash_map<string, int, hash<string>,equal_to<string> > cind_map;
+  unordered_map<string, int, hash<string>,equal_to<string> > cind_map;
   vector<string> cnames;
   
 
@@ -1981,7 +1979,7 @@
       }
 
       // determine the chromosome index
-      hash_map<string, int, hash<string>,equal_to<string> >::const_iterator li=cind_map.find(chr);
+      unordered_map<string, int, hash<string>,equal_to<string> >::const_iterator li=cind_map.find(chr);
       int cind=-1;
       if(li==cind_map.end()) {
 	// register new chromosome
@@ -2116,7 +2114,7 @@
   vector< vector<int> > posnm; // number of mismatches
 
   // chromosome map
-  hash_map<string, int, hash<string>,equal_to<string> > cind_map;
+  unordered_map<string, int, hash<string>,equal_to<string> > cind_map;
   vector<string> cnames;
   
 
@@ -2158,7 +2156,7 @@
       int nm=atoi(str_qual.c_str());
       
       // determine the chromosome index
-      hash_map<string, int, hash<string>,equal_to<string> >::const_iterator li=cind_map.find(chr);
+      unordered_map<string, int, hash<string>,equal_to<string> >::const_iterator li=cind_map.find(chr);
       int cind=-1;
       if(li==cind_map.end()) {
 	// register new chromosome
@@ -2267,7 +2265,7 @@
   vector< vector<int> > posnm; // number of mismatches
 
   // chromosome map
-  hash_map<string, int, hash<string>,equal_to<string> > cind_map;
+  unordered_map<string, int, hash<string>,equal_to<string> > cind_map;
   vector<string> cnames;
   
 
@@ -2326,7 +2324,7 @@
       
       
       // determine the chromosome index
-      hash_map<string, int, hash<string>,equal_to<string> >::const_iterator li=cind_map.find(chr);
+      unordered_map<string, int, hash<string>,equal_to<string> >::const_iterator li=cind_map.find(chr);
       int cind=-1;
       if(li==cind_map.end()) {
 	// register new chromosome
@@ -2438,7 +2436,7 @@
   vector< vector<int> > poslen; // length of the match
 
   // chromosome map
-  hash_map<string, int, hash<string>,equal_to<string> > cind_map;
+  unordered_map<string, int, hash<string>,equal_to<string> > cind_map;
   vector<string> cnames;
   
 
@@ -2527,7 +2525,7 @@
       
       
       // determine the chromosome index
-      hash_map<string, int, hash<string>,equal_to<string> >::const_iterator li=cind_map.find(chr);
+      unordered_map<string, int, hash<string>,equal_to<string> >::const_iterator li=cind_map.find(chr);
       int cind=-1;
       if(li==cind_map.end()) {
 	// register new chromosome
--- a/src/maqread.cpp
+++ b/src/maqread.cpp
@@ -4,7 +4,6 @@
 #include <iostream>
 #include <fstream>
 #include <sstream>
-#include <strstream>
 #include <algorithm>
 #include <string>
 #include <functional>
@@ -20,7 +19,6 @@
 }
 
 using namespace std;
-using namespace __gnu_cxx; 
 
 
 class lessAbsoluteValue {
@@ -55,7 +53,7 @@
   vector< vector<string> > tagnames;
 
   // chromosome map
-  hash_map<string, int, hash<string>,equal_to<string> > cind_map;
+  unordered_map<string, int, hash<string>,equal_to<string> > cind_map;
   vector<string> cnames;
   
 
@@ -89,7 +87,7 @@
     
 
       // determine the chromosome index
-      hash_map<string, int, hash<string>,equal_to<string> >::const_iterator li=cind_map.find(chr);
+      unordered_map<string, int, hash<string>,equal_to<string> >::const_iterator li=cind_map.find(chr);
       int cind=-1;
       if(li==cind_map.end()) {
 	// register new chromosome
--- a/src/Makevars.in
+++ b/src/Makevars.in
@@ -1,4 +1,3 @@
 PKG_LIBS=@LIBS@ -lz
-PKG_CFLAGS=-I./ -D_FASTMAP -DMAQ_LONGREADS @HAVE_LIBBZ2@  
-PKG_CXXFLAGS=-I./ -D_FASTMAP -DMAQ_LONGREADS	@HAVE_LIBBZ2@  @BOOST_CPPFLAGS@
-
+PKG_CFLAGS=-I./ -D_FASTMAP -DMAQ_LONGREADS -std=c++11 @HAVE_LIBBZ2@
+PKG_CXXFLAGS=-I./ -D_FASTMAP -DMAQ_LONGREADS -std=c++11 @HAVE_LIBBZ2@  @BOOST_CPPFLAGS@
--- a/src/peaks.cpp
+++ b/src/peaks.cpp
@@ -14,7 +14,6 @@
 }
 
 using namespace std;
-using namespace __gnu_cxx; 
 
 /**
  * Calculate all local peaks
--- a/src/wdl.cpp
+++ b/src/wdl.cpp
@@ -14,7 +14,6 @@
 }
 
 using namespace std;
-using namespace __gnu_cxx; 
 
 //#define DEBUG 1
 
